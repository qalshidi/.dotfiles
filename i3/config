# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!
#
# This config file uses keycodes (bindsym) and was written for the QWERTY
# layout.
#
# To get a config file with the same key positions, but for your current
# layout, use the i3-config-wizard
#

# Color scheme: solarized
set $base03 #002b36
set $base02 #073642
set $base01 #586e75
set $base00 #657b83
set $base0 #839496
set $base1 #93a1a1
set $base2 #eee8d5
set $base3 #fdf6e3
set $yellow #b58900
set $orange #cb4b16
set $red #dc322f
set $magenta #d33682
set $violet #6c71c4
set $blue #268bd2
set $cyan #2aa198
set $green #859900

# Maia solarized
# class                 border  backgr. text    indicator child_border
client.focused          $blue   $base02 $violet $orange   $blue
client.focused_inactive $violet $base02 $violet $orange   $violet
client.unfocused        $cyan   $base03 $base1  $orange   $cyan
client.urgent           $red    $base02 $red    $orange   $red
client.placeholder      $cyan   $base02 $base1  $orange   $cyan

client.background       $base03

# Font
font pango:Roboto Bold 16

# Border
set $border border pixel 3
for_window [class=".*"] $border 
set $border_focus border pixel 8

# Auto start necessities allow $XDG_CONFIG_HOME/autostart/*.desktop
# files to dictate autostart
exec --no-startup-id lxsession

## Bindings
# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
# Basic keys
set $up k
set $down j
set $left h
set $right l
set $mod Mod4
# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod
# kill focused window
bindsym $mod+Shift+q kill
# change focus
bindsym $mod+$left $border; focus left; $border_focus
bindsym $mod+$down $border; focus down; $border_focus
bindsym $mod+$up $border; focus up; $border_focus
bindsym $mod+$right $border; focus right; $border_focus
# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
# split in horizontal orientation
bindsym $mod+b split h
# split in vertical orientation
bindsym $mod+v split v
# Toggle orientation split
bindsym $mod+q split toggle
# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle
# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle
# focus the parent container
bindsym $mod+a focus parent
# focus the child container
#bindsym $mod+d focus child
# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad
# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

## Applications
set $TERMINAL i3-sensible-terminal
# Terminal and File Manager
bindsym $mod+Return exec --no-startup-id "$TERMINAL -e ranger"
bindsym $mod+Shift+Return exec --no-startup-id "$TERMINAL"
# Launcher
set $launcher rofi -show-icons -theme solarized_alternate -font 'sans-serif 16'
bindsym $mod+d exec "$launcher -modi combi -show combi -combi-modi drun,run -terminal $TERMINAL"
bindsym $mod+Shift+d exec $launcher -show ssh -terminal "$TERMINAL"
# Volume
bindsym $mod+Shift+v exec pavucontrol
# Screenshot
bindsym --release $mod+Print exec scrot -s $HOME/Pictures/Screenshots/screenshot.png

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"

set $ws5 "5: browser"
assign [class="(?i)firefox"] $ws5
bindsym $mod+F5 exec "env HOME=$XDG_DATA_HOME firefox"

set $ws6 "6: work"
bindsym $mod+F6 exec $terminal -e nvim ~/Documents/Todo.markdown 

set $ws7 "7"

set $ws8 "8: music"
assign [class="(?i)spotify"] $ws8
bindsym $mod+F8 exec "env HOME=$XDG_DATA_HOME spotify"

set $ws9 "9: steam"
assign [class="(?i)steam"] $ws9
bindsym $mod+F9 exec "env HOME=$XDG_DATA_HOME steam"

set $ws10 "0: game"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# back and forth workspace
bindsym $mod+Tab workspace back_and_forth
bindsym $mod+Shift+Tab move container to workspace back_and_forth


# rename workspace
bindsym $mod+Insert exec i3-input -F 'rename workspace to "%s"' -P 'New name: '

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
# bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Shift+e exec lxsession-logout

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left       resize shrink width 10 px or 10 ppt
        bindsym $down       resize grow height 10 px or 10 ppt
        bindsym $up         resize shrink height 10 px or 10 ppt
        bindsym $right      resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left        resize shrink width 10 px or 10 ppt
        bindsym Down        resize grow height 10 px or 10 ppt
        bindsym Up          resize shrink height 10 px or 10 ppt
        bindsym Right       resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

# gaps
smart_gaps on
gaps inner 10
gaps outer 30
set $gaps_default gaps inner all set 10; gaps outer all set 30;

set $mode_gaps Gaps: (o)uter, (i)nner, (h)orizontal, (v)ertical, (t)op, (r)ight, (b)ottom, (l)eft, (d)efault
set $mode_gaps_outer Outer Gaps: +k|-j|0 (local), Shift + +k|-j|0 (global)
set $mode_gaps_inner Inner Gaps: +k|-j|0 (local), Shift + +k|-j|0 (global)
set $mode_gaps_horiz Horizontal Gaps: +k|-j|0 (local), Shift + +k|-j|0 (global)
set $mode_gaps_verti Vertical Gaps: +k|-j|0 (local), Shift + +k|-j|0 (global)
set $mode_gaps_top Top Gaps: +k|-j|0 (local), Shift + +k|-j|0 (global)
set $mode_gaps_right Right Gaps: +k|-j|0 (local), Shift + +k|-j|0 (global)
set $mode_gaps_bottom Bottom Gaps: +k|-j|0 (local), Shift + +k|-j|0 (global)
set $mode_gaps_left Left Gaps: +k|-j|0 (local), Shift + +k|-j|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym h      mode "$mode_gaps_horiz"
        bindsym v      mode "$mode_gaps_verti"
        bindsym t      mode "$mode_gaps_top"
        bindsym r      mode "$mode_gaps_right"
        bindsym b      mode "$mode_gaps_bottom"
        bindsym l      mode "$mode_gaps_left"
        bindsym d $gaps_default
        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
        bindsym k  gaps outer current plus 5
        bindsym j gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+k  gaps outer all plus 5
        bindsym Shift+j gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym k  gaps inner current plus 5
        bindsym j gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+k  gaps inner all plus 5
        bindsym Shift+j gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_horiz" {
        bindsym k  gaps horizontal current plus 5
        bindsym j gaps horizontal current minus 5
        bindsym 0     gaps horizontal current set 0

        bindsym Shift+k  gaps horizontal all plus 5
        bindsym Shift+j gaps horizontal all minus 5
        bindsym Shift+0     gaps horizontal all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_verti" {
        bindsym k  gaps vertical current plus 5
        bindsym j gaps vertical current minus 5
        bindsym 0     gaps vertical current set 0

        bindsym Shift+k  gaps vertical all plus 5
        bindsym Shift+j gaps vertical all minus 5
        bindsym Shift+0     gaps vertical all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_top" {
        bindsym k  gaps top current plus 5
        bindsym j gaps top current minus 5
        bindsym 0     gaps top current set 0

        bindsym Shift+k  gaps top all plus 5
        bindsym Shift+j gaps top all minus 5
        bindsym Shift+0     gaps top all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_right" {
        bindsym k  gaps right current plus 5
        bindsym j gaps right current minus 5
        bindsym 0     gaps right current set 0

        bindsym Shift+k  gaps right all plus 5
        bindsym Shift+j gaps right all minus 5
        bindsym Shift+0     gaps right all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_bottom" {
        bindsym k  gaps bottom current plus 5
        bindsym j gaps bottom current minus 5
        bindsym 0     gaps bottom current set 0

        bindsym Shift+k  gaps bottom all plus 5
        bindsym Shift+j gaps bottom all minus 5
        bindsym Shift+0     gaps bottom all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}
mode "$mode_gaps_left" {
        bindsym k  gaps left current plus 5
        bindsym j gaps left current minus 5
        bindsym 0     gaps left current set 0

        bindsym Shift+k  gaps left all plus 5
        bindsym Shift+j gaps left all minus 5
        bindsym Shift+0     gaps left all set 0

        bindsym Return mode "$mode_gaps"
        bindsym Escape mode "default"
}

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    status_command i3status
	position top
	strip_workspace_numbers no
	strip_workspace_name no
	workspace_buttons yes
	separator_symbol "/"

	colors {
		background $base2
		statusline $base00
		separator $base01

		focused_workspace  $base01 $base3 $cyan
		active_workspace   $base01 $base3 $violet
		inactive_workspace $base3 $base2 $base00
		urgent_workspace   $base01 $base3 $orange
		binding_mode       $base01 $base3 $cyan
	}
}
